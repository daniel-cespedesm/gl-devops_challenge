---
- hosts: jenkins
  become: yes
  remote_user: ec2-user
  tasks:
    - name: Makes sure OS is up to date
      yum:  name=* state=latest
    - name: Makes sure Java 8 is present
      yum: name=java-1.8.0-openjdk state=latest
    - name: Make sure correct Java version selected
      alternatives:
        name: java
        link: /usr/bin/java
        path: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.171-8.b10.el7_5.x86_64/jre/bin/java
    - name: Docker dependencies
      yum: name={{ item }} state=latest
      with_items:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - git
    - name: Docker repo
      get_url: url=https://download.docker.com/linux/centos/docker-ce.repo dest=/etc/yum.repos.d/docker.repo force=yes
    - name: Makes sure Docker is at its latest RHEL compatible version
      command: yum install -y --setopt=obsoletes=0 docker-ce-17.03.1.ce-1.el7.centos.x86_64
      args:
        warn: no
    - name: Make sure Docker is started now and at boot.
      service: name=docker state=started enabled=yes
    - name: Remove docker repo
      file: path=/etc/yum.repos.d/docker.repo state=absent
    - name: Kills docker containers if any
      command: docker kill $(docker ps -q)
    - name: Pull Jenkins docker image
      command: docker pull dacesmo/jenkins
    - name: Make sure Jenkins home exists
      file: path=/var/jenkins_home state=directory
    - name: Make sure K8s repo folder exists
      file: path=/var/opt/k8s state=directory
    - name: Run Jenkins instance
      command: docker run -d -u root -p 8081:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home dacesmo/jenkins
    - name: Add k8s repo
      yum_repository:
        name: K8s
        description: Kubernetes repository
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        gpgcheck: yes
        repo_gpgcheck: yes
    - name: Set selinux permissive
      selinux:
        policy: targeted
        state: permissive
    - name: Install K8s components
      yum: name={{ item }} state=latest
      with_items:
        - kubelet
        - kubeadm
        - kubectl
    - name: Make sure Kubelet is started now and at boot.
      service: name=kubelet state=started enabled=yes
    - name: Create K8s kernel lines
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
    - name: Init K8s cluster
      command: kubeadm init
